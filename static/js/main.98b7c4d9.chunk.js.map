{"version":3,"sources":["components/Appbar.js","components/SearchForm.js","actions.js","components/MusicPlayer.js","components/MusicDetails.js","components/SimilarContent.js","components/RatingForm.js","components/Ratings.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["Appbar","react_default","a","createElement","id","SearchForm","state","isLoading","submitSearch","e","preventDefault","musicTitle","document","getElementById","searchError","searchResult","genres","genreDescriptions","_this","setState","fetch","concat","value","then","res","json","data","musicData","search","tracks","allGenres","innerHTML","links","ids","forEach","genre","albumName","artistName","musicName","name","seconds","playbackSeconds","url","previewURL","genreIds","Object","toConsumableArray","description","props","searchMusic","catch","err","className","onSubmit","this","type","placeholder","Component","connect","dispatch","music","MusicPlayer","setTimeout","musicPlayer","querySelector","newAudioTag","setAttribute","newSourceTag","src","appendChild","children","remove","controls","_props$state$searchRe","genreIndex","href","target","map","key","title","SimilarContent","searchThis","searchInput","searchBtn","nextSibling","click","prevProps","_this2","currentState","allIds","track","length","similarContent","_this3","content","onClick","RatingForm","rating","stars","smile","parseInt","fillStar","i","parentNode","childNodes","submitForm","firestore","firebase","settings","timestampsInSnapshots","collection","add","child","Ratings","ratings","onSnapshot","snapshot","docs","doc","App","components_Appbar","components_SearchForm","components_MusicPlayer","components_MusicDetails","components_RatingForm","components_SimilarContent","components_Ratings","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","objectSpread","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98b7c4d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Appbar = () => {\r\n      return(\r\n            <nav id=\"app-bar\">\r\n                  <h1>Entertainment Rating App</h1>\r\n            </nav>\r\n      )\r\n}\r\n\r\nexport default Appbar;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {searchMusic} from '../actions';\r\n\r\nclass SearchForm extends Component {\r\n      state = {\r\n            isLoading: false\r\n      };\r\n      \r\n      submitSearch = (e) => {\r\n            e.preventDefault();\r\n\r\n            let musicTitle = document.getElementById('music-title');\r\n            let searchError = document.getElementById('search-error');\r\n            let searchResult = {\r\n                  genres: [],\r\n                  genreDescriptions: []\r\n            };\r\n            this.setState({\r\n                  isLoading: true\r\n            });\r\n\r\n            fetch(`https://api.napster.com/v2.2/search/verbose?apikey=MTFiZGY4NjgtMGM4Ni00YjIwLTk0OGYtYzI1ZWY4OGZjYTNk&per_type_limit=1&query=${musicTitle.value}&type=track`)\r\n                  .then(res => res.json())\r\n                  .then(data => {\r\n                        let musicData = data.search.data.tracks[0];\r\n                        let allGenres = '';\r\n                        searchError.innerHTML = '';\r\n\r\n                        musicData.links.genres.ids.forEach(genre => {\r\n                              allGenres += `${genre},`;\r\n                        });\r\n\r\n                        fetch(`https://api.napster.com/v2.2/genres/${allGenres}?apikey=MTFiZGY4NjgtMGM4Ni00YjIwLTk0OGYtYzI1ZWY4OGZjYTNk`)\r\n                              .then(res => res.json())\r\n                              .then(data => {\r\n                                    data.genres.forEach(genre => {\r\n                                          searchResult = {\r\n                                                albumName: musicData.albumName,\r\n                                                artistName: musicData.artistName,\r\n                                                musicName: musicData.name,\r\n                                                seconds: musicData.playbackSeconds,\r\n                                                url: musicData.previewURL,\r\n                                                genreIds: [\r\n                                                      ...musicData.links.genres.ids\r\n                                                ],\r\n                                                genres: [\r\n                                                      ...searchResult.genres,\r\n                                                      genre.name\r\n                                                ],\r\n                                                genreDescriptions: [\r\n                                                      ...searchResult.genreDescriptions,\r\n                                                      genre.description\r\n                                                ]\r\n                                          };\r\n                                          this.setState({\r\n                                                isLoading: false\r\n                                          });\r\n                                    });\r\n\r\n                                    this.props.searchMusic(searchResult);\r\n                              });\r\n                  }).catch(err => {\r\n                        searchError.innerHTML = 'The entered music title was not found.';\r\n                        this.setState({\r\n                              isLoading: false\r\n                        });\r\n                  });\r\n\r\n            musicTitle.value = '';\r\n      }\r\n\r\n      render(){\r\n            return(\r\n                  <div className=\"search-form container\">\r\n                        <form onSubmit={this.submitSearch}>\r\n                              <input type=\"text\" placeholder=\"Music title\" id=\"music-title\" className=\"search-input container\"/>\r\n                              <button className=\"btn container\" id=\"search-btn\">Search</button>\r\n                        </form>\r\n                        <p id=\"search-error\"></p>\r\n                        {\r\n                              this.state.isLoading === true ? (\r\n                                    <div className=\"loading-spinner\"></div>\r\n                              ) : null\r\n                        }\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n      return {\r\n            searchMusic: (music) => dispatch(searchMusic(music))\r\n      }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchForm);","export const searchMusic = (music) => {\r\n      return {\r\n            type: 'SEARCH_MUSIC',\r\n            music\r\n      }\r\n}\r\n\r\nexport const similarContent = (content) => {\r\n      return {\r\n            type: 'SIMILAR_CONTENT',\r\n            content\r\n      }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass MusicPlayer extends Component {\r\n      componentWillReceiveProps(){\r\n            setTimeout(() => {\r\n                  let musicPlayer = document.querySelector('.music-player');\r\n            \r\n                  let newAudioTag = document.createElement('audio');\r\n                  newAudioTag.setAttribute('controls', '');\r\n\r\n                  let newSourceTag = document.createElement('source');\r\n                  newSourceTag.src = this.props.state.searchResult.url;\r\n                  newSourceTag.type = 'audio/mp3';\r\n\r\n                  newAudioTag.appendChild(newSourceTag);\r\n                  \r\n                  musicPlayer.children[0].remove();\r\n                  musicPlayer.appendChild(newAudioTag);\r\n            }, 1);\r\n      }\r\n      \r\n      render(){\r\n            return(\r\n                  <div className=\"music-player container\">\r\n                        <audio controls></audio>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n            state\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicPlayer);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst MusicDetails = (props) => {\r\n      let {\r\n            musicName,\r\n            artistName,\r\n            albumName,\r\n            genres,\r\n            genreDescriptions,\r\n            seconds\r\n      } = props.state.searchResult;\r\n      let genreIndex = -1;\r\n\r\n      return(\r\n            <div className=\"music-details container\">\r\n                  {\r\n                        typeof musicName === 'undefined' ? null : (\r\n                              <div>\r\n                                    <h1>{musicName} by\r\n                                          <a href={`https://www.google.com/search?q=${artistName}`} className=\"blue\" target=\"blank\"> {artistName}</a>\r\n                                    </h1>\r\n                                    <h2>Album: {albumName}</h2>\r\n                                    <ul>\r\n                                          Genres:\r\n                                          {\r\n                                                genres.map(genre => {    \r\n                                                      genreIndex++;\r\n                                                      return <li key={genre} title={genreDescriptions[genreIndex]}>{genre}</li>\r\n                                                })\r\n                                          }\r\n                                    </ul>\r\n                                    <strong>Length: {seconds} seconds</strong>\r\n                              </div>\r\n                        )\r\n                  }\r\n            </div>\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n            state\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicDetails);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {similarContent} from '../actions';\r\n\r\nclass SimilarContent extends Component{\r\n      state = {\r\n            isLoading: false\r\n      };\r\n\r\n      componentDidUpdate(prevProps){\r\n            let currentState = this.props.state;\r\n\r\n            if(prevProps.state.searchResult !== currentState.searchResult){\r\n                  this.setState({\r\n                        isLoading: true\r\n                  });\r\n                  let allIds = '';\r\n                  let tracks = [];\r\n\r\n                  currentState.searchResult.genreIds.forEach(id => {\r\n                        allIds += `${id},`;\r\n                  });\r\n\r\n                  fetch(`https://api.napster.com/v2.2/genres/${allIds}/tracks/top?apikey=MTFiZGY4NjgtMGM4Ni00YjIwLTk0OGYtYzI1ZWY4OGZjYTNk&limit=10`)\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                              data.tracks.forEach(track => {\r\n                                    if(tracks.length < 10){\r\n                                          tracks = [\r\n                                                ...tracks,\r\n                                                {\r\n                                                      name: track.name,\r\n                                                      artistName: track.artistName,\r\n                                                      url: track.previewURL\r\n                                                }\r\n                                          ]\r\n                                    }\r\n                              });\r\n\r\n                              this.props.similarContent(tracks);\r\n                              this.setState({\r\n                                    isLoading: false\r\n                              });\r\n                        });\r\n            }\r\n      }\r\n\r\n      searchThis = (e) => {\r\n            let searchInput = document.getElementById('music-title');\r\n            let searchBtn = document.getElementById('search-btn');\r\n\r\n            searchInput.value = `${e.target.innerHTML} ${e.target.nextSibling.innerHTML}`;\r\n            searchBtn.click();\r\n      }\r\n\r\n      render(){\r\n            return(\r\n                  <div className=\"similar-content container\">\r\n                        <h1>Similar Content</h1>\r\n                        <div className=\"wrapper\">\r\n                              {\r\n                                    this.state.isLoading === true ? (\r\n                                          <div className=\"loading-spinner\"></div>\r\n                                    ) : (\r\n                                          typeof this.props.state.similarContent !== 'undefined' ? (\r\n                                                this.props.state.similarContent.map(content => {\r\n                                                      return (\r\n                                                            <div key={content.url} className=\"item\">\r\n                                                                  <h2 onClick={this.searchThis} className=\"blue\">{content.name}</h2>\r\n                                                                  <h3>{content.artistName}</h3>\r\n                                                            </div>\r\n                                                      )\r\n                                                })\r\n                                          ) : null\r\n                                    )\r\n                              }\r\n                        </div>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n            state\r\n      }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n      return {\r\n            similarContent: (content) => {dispatch(similarContent(content))}\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimilarContent);","import React, {Component} from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RatingForm extends Component{\r\n      state = {\r\n            rating: '',\r\n            stars: 0\r\n      };\r\n\r\n      smile = (rating) => {\r\n            switch(parseInt(rating)){\r\n                  case 0:\r\n                        this.setState({ rating: 'far fa-angry', stars: 1 });\r\n                        break;\r\n                  case 1:\r\n                        this.setState({ rating: 'far fa-frown', stars: 2 });\r\n                        break;\r\n                  case 2:\r\n                        this.setState({ rating: 'far fa-meh', stars: 3 });\r\n                        break;\r\n                  case 3:\r\n                        this.setState({ rating: 'far fa-smile', stars: 4 });\r\n                        break;\r\n                  case 4:\r\n                        this.setState({ rating: 'far fa-smile-beam', stars: 5 });\r\n                        break;\r\n                  default:\r\n                        return null;\r\n            }\r\n      }\r\n\r\n      fillStar = (e) => {\r\n            if(e.target.className === 'far fa-star'){\r\n                  for(let i = e.target.id; i >= 0; i--){\r\n                        e.target.parentNode.childNodes[i].setAttribute('class', 'fas fa-star');\r\n                  }\r\n                  this.smile(e.target.id);\r\n            } else{\r\n                  for(let i = parseInt(e.target.id)+1; i <= 4; i++){\r\n                        e.target.parentNode.childNodes[i].setAttribute('class', 'far fa-star');\r\n                  }\r\n                  this.smile(e.target.id);\r\n            }\r\n      }\r\n\r\n      submitForm = (e) => {\r\n            e.preventDefault();\r\n            let name = e.target.childNodes[1];\r\n            let rating = e.target.childNodes[2];\r\n            \r\n            const firestore = firebase.firestore();\r\n\r\n            firestore.settings({ timestampsInSnapshots: true });\r\n\r\n            if(typeof name.value !== 'undefined' && name.value !== '' && this.state.stars !== 0 && this.props.music !== 'undefined by undefined'){\r\n                  firestore.collection('ratings').add({\r\n                        name: name.value,\r\n                        rating: rating.value,\r\n                        stars: this.state.stars,\r\n                        music: this.props.music\r\n                  });\r\n\r\n                  rating.value = '';\r\n                  document.querySelector('.stars').childNodes.forEach(child => child.className = 'far fa-star');\r\n                  this.setState({ rating: '', stars: 0 });\r\n            }\r\n      }\r\n\r\n      render(){\r\n            return(\r\n                  <div className=\"rating-form container\">\r\n                        <div className=\"stars\">\r\n                              <i className=\"far fa-star\" onClick={this.fillStar} id=\"0\"></i>\r\n                              <i className=\"far fa-star\" onClick={this.fillStar} id=\"1\"></i>\r\n                              <i className=\"far fa-star\" onClick={this.fillStar} id=\"2\"></i>\r\n                              <i className=\"far fa-star\" onClick={this.fillStar} id=\"3\"></i>\r\n                              <i className=\"far fa-star\" onClick={this.fillStar} id=\"4\"></i>\r\n                        </div>\r\n                        <form onSubmit={this.submitForm}>\r\n                              <i className={this.state.rating}></i>\r\n                              <input type=\"text\" placeholder=\"Your name\" className=\"search-input container\"/>\r\n                              <textarea placeholder=\"What did you think about this song? (Optional)\" className=\"container\"></textarea>\r\n                              <button className=\"btn container\">Submit</button>\r\n                        </form>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n            music: `${state.searchResult.musicName} by ${state.searchResult.artistName}`\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RatingForm);","import React, {Component} from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Ratings extends Component {\r\n      state = {\r\n            ratings: []\r\n      };\r\n\r\n      componentDidUpdate(prevProps){\r\n            if(prevProps.music !== this.props.music){\r\n                  const firestore = firebase.firestore();\r\n\r\n                  firestore.settings({\r\n                        timestampsInSnapshots: true\r\n                  });\r\n\r\n                  this.setState({\r\n                        ratings: []\r\n                  });\r\n      \r\n                  firestore.collection('ratings').onSnapshot(snapshot => {\r\n                        this.setState({\r\n                              ratings: []\r\n                        });\r\n\r\n                        snapshot.docs.forEach(doc => {\r\n                              if(doc.data().music === this.props.music){\r\n                                    this.setState({\r\n                                          ratings: [\r\n                                                ...this.state.ratings,\r\n                                                {\r\n                                                      id: doc.id,\r\n                                                      name: doc.data().name,\r\n                                                      music: doc.data().music,\r\n                                                      stars: doc.data().stars,\r\n                                                      rating: doc.data().rating\r\n                                                }\r\n                                          ]\r\n                                    });\r\n                              }\r\n                        });\r\n                  });\r\n            }\r\n      }\r\n\r\n      render(){\r\n            return(\r\n                  <div className=\"ratings container\">\r\n                        <h1>Ratings</h1>\r\n                        <div className=\"wrapper\">\r\n                              {\r\n                                    this.props.music !== 'undefined by undefined' ? (\r\n                                          this.state.ratings.length > 0 ? (\r\n                                                this.state.ratings.map(rating => {\r\n                                                      return(\r\n                                                            <div className=\"item\" key={rating.id}>\r\n                                                                  <h2>{rating.name} - {rating.stars} stars</h2>\r\n                                                                  <p>{rating.rating}</p>\r\n                                                            </div>\r\n                                                      )\r\n                                                })\r\n                                          ) : <p>{this.props.music} has no ratings yet. Be the first to rate it!</p>\r\n                                    ) : null\r\n                              }\r\n                        </div>\r\n                  </div>\r\n            )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n      return {\r\n            music: `${state.searchResult.musicName} by ${state.searchResult.artistName}`\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Ratings);","import React, { Component } from 'react';\nimport Appbar from './components/Appbar';\nimport SearchForm from './components/SearchForm';\nimport MusicPlayer from './components/MusicPlayer';\nimport MusicDetails from './components/MusicDetails';\nimport SimilarContent from './components/SimilarContent';\nimport RatingForm from './components/RatingForm';\nimport Ratings from './components/Ratings';\n\nclass App extends Component {\n      render() {\n            return (\n                  <div className=\"App\">\n                        <Appbar/>\n                        <div id=\"main\">\n                              <div className=\"music-wrapper\">\n                                    <div className=\"search\">\n                                          <SearchForm/>\n                                          <MusicPlayer/>\n                                    </div>\n                                    <MusicDetails/>\n                                    <RatingForm/>\n                              </div>\n                              <div className=\"side-content\">\n                                    <SimilarContent/>\n                                    <Ratings/>\n                              </div>\n                        </div>\n                  </div>\n            );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n      searchResult: {}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n      switch(action.type){\r\n            case 'SEARCH_MUSIC':\r\n                  return {\r\n                        ...state,\r\n                        searchResult: action.music\r\n                  };\r\n            case 'SIMILAR_CONTENT':\r\n                  return {\r\n                        ...state,\r\n                        similarContent: action.content\r\n                  };\r\n            default: return state;\r\n      }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport firebase from 'firebase/app';\n\nlet config = {\n      apiKey: \"AIzaSyB6tmZ_w1d2vyK4hIGqBEUfMTlNbLjFjFA\",\n      authDomain: \"entertainment-rating-app.firebaseapp.com\",\n      databaseURL: \"https://entertainment-rating-app.firebaseio.com\",\n      projectId: \"entertainment-rating-app\",\n      storageBucket: \"entertainment-rating-app.appspot.com\",\n      messagingSenderId: \"293386828518\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}